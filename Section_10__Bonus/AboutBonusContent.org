#+title: Summarising the Bonus content
#+author: Skshm

** Polymorphism
+ You can always use a derive class where a super calss is expected
  - ='virtual'= creates a vTable that enables it to lookup the right method from the right subclass by the name of the subclass
  - SO when we override a virtual in subclasses we get the right kind of method being called for the actual obj that the pointer/reference points at
+ Its good practice  to add virtual to the  overrides too btw
  - Destructors (~class) should often be virtual so that the right destructors are called
  - The =Speak\=0= ensures that any decendent of the superclass must have an implementation of that method
+ The Class is now an Abstract base class and the Speak is a pure Virtual method

** Static libraries
1. Create a normal cpp program
2. Compile the Library:
   #+BEGIN_SRC bash
   g++ -c out.c -o out.o
   ar rcs libout.a out.o
   g++ runner.cpp -o runner -L../path-to-a -l:Lib.a -I../CommonLib -I../cxxtest-4.4
   #+END_SRC
   A. Compiling Program: =-c= means to create an intermediary object file, rather than an executable.
   B. Creating the static library: =r= means to insert with replacement, =c= means to create a new archive, and =s= means to write an index.
      - Refer to the man page of =ar= for more info
      - The Library is the one with the extention '.a'
